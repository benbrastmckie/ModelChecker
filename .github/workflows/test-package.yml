name: Test Package Installation

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Test on Test PyPI'
        required: false
        type: boolean
        default: false

jobs:
  build-and-test:
    name: Test on ${{ matrix.os }} / Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Display Python version
      run: |
        python --version
        pip --version
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel setuptools
    
    - name: Build package
      run: |
        cd Code
        python -m build
    
    - name: List built distributions
      run: |
        ls Code/dist/
      shell: bash
    
    - name: Test wheel installation
      run: |
        cd Code
        pip install dist/*.whl
        cd ..
        python -c "import model_checker; print(f'Successfully imported model_checker version: {model_checker.__version__}')"
    
    - name: Uninstall wheel
      run: pip uninstall -y model-checker
    
    - name: Test source distribution installation  
      run: |
        cd Code
        pip install dist/*.tar.gz
        cd ..
        python -c "import model_checker; print(f'Successfully imported model_checker version: {model_checker.__version__}')"
    
    - name: Run import tests
      run: |
        python -c "
        import model_checker
        print('Core import successful')
        "
    
    - name: Test CLI availability
      run: |
        python -m model_checker --help
    
    - name: Check if tests exist
      id: check_tests
      run: |
        if [ -d "Code/src/model_checker/theory_lib" ]; then
          echo "tests_exist=true" >> $GITHUB_OUTPUT
        else
          echo "tests_exist=false" >> $GITHUB_OUTPUT
        fi
      shell: bash
    
    - name: Run basic tests
      if: steps.check_tests.outputs.tests_exist == 'true'
      run: |
        pip install pytest
        cd Code
        pytest src/model_checker/theory_lib -v --tb=short || echo "Some tests failed but continuing"
      shell: bash

  test-pypi-upload:
    name: Test PyPI Upload (Manual Trigger Only)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.test_pypi == 'true'
    needs: build-and-test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        cd Code
        python -m build
        ls -la dist/
    
    - name: Check package with twine
      run: |
        cd Code
        twine check dist/*
    
    - name: Upload to Test PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        if [ -n "$TWINE_PASSWORD" ]; then
          cd Code
          twine upload --repository testpypi dist/* --skip-existing
        else
          echo "TEST_PYPI_API_TOKEN not set, skipping Test PyPI upload"
        fi
      continue-on-error: true
    
    - name: Test installation from Test PyPI (if uploaded)
      run: |
        # Try to install from Test PyPI, but don't fail if package doesn't exist
        pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ model-checker || echo "Package not on Test PyPI yet"
        
        # If installed, verify it works
        if pip show model-checker > /dev/null 2>&1; then
          python -c "import model_checker; print(f'Successfully installed from Test PyPI: {model_checker.__version__}')"
        else
          echo "Package not available on Test PyPI, skipping verification"
        fi

  summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: build-and-test
    if: always()
    
    steps:
    - name: Summary
      run: |
        echo "## Package Testing Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "All platform tests have completed. Check individual job results above." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Tested Configurations:" >> $GITHUB_STEP_SUMMARY
        echo "- Operating Systems: Ubuntu, macOS, Windows" >> $GITHUB_STEP_SUMMARY
        echo "- Python Versions: 3.8, 3.9, 3.10, 3.11, 3.12" >> $GITHUB_STEP_SUMMARY